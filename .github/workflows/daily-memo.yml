name: Matt's Memo - Daily Intelligence Brief

on:
  schedule:
    # Run at 6:00 AM AEST (8:00 PM UTC previous day)
    - cron: '0 20 * * *'  # Fixed: added missing asterisk
  
  # Allow manual triggering for testing
  workflow_dispatch:

jobs:
  send-daily-memo:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Process RSS feeds and send daily email
      env:
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        GMAIL_USER: ${{ secrets.GMAIL_USER }}
        GMAIL_APP_PASSWORD: ${{ secrets.GMAIL_APP_PASSWORD }}
        RECIPIENT_EMAIL: ${{ secrets.RECIPIENT_EMAIL }}
        LINKEDIN_PROFILE_URL: ${{ secrets.LINKEDIN_PROFILE_URL }}
      run: |
        echo "ðŸš€ Starting RSS feed processing and email generation..."
        python rss_analyzer.py process
        echo "âœ… Daily memo processing completed!"
    
    - name: Upload logs as artifact
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: rss-analyzer-logs-${{ github.run_number }}
        path: rss_analyzer.log
        retention-days: 7
    
    - name: Cleanup old database entries
      env:
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        GMAIL_USER: ${{ secrets.GMAIL_USER }}
        GMAIL_APP_PASSWORD: ${{ secrets.GMAIL_APP_PASSWORD }}
        RECIPIENT_EMAIL: ${{ secrets.RECIPIENT_EMAIL }}
        LINKEDIN_PROFILE_URL: ${{ secrets.LINKEDIN_PROFILE_URL }}
      run: |
        python rss_analyzer.py cleanup 7
        echo "ðŸ§¹ Cleaned up database entries older than 7 days"
